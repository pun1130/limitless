import com.modrinth.minotaur.TaskModrinthUpload

plugins {
    id("wheel-fabric").version("latest.integration")
    id("kbootstrap").version("latest.integration")
    id("net.auoeke.extensions").version("latest.integration")
    id("com.modrinth.minotaur").version("latest.integration")
}

group = "net.auoeke"
version = "1.5.12"
description = "a mod about enchanting and exceeding Minecraft's limits"

loom {
    accessWidenerPath = file("resources/limitless.accesswidener")
}

kextensions {
    configurations = ["api", "include"]
}

sourceSets {
    main {
        kotlin.srcDir("src")
        java.srcDir("src")

        resources {
            srcDir("resources")
            include("assets/", "data/", "*.json", "*.accesswidener")
        }
    }

    test {
        java.srcDir("test")
    }
}

repositories {
    maven {url = "https://maven.auoeke.net"}
}

dependencies {
    include(
        mod("api-base"),
        mod("api-resource-loader"),
        mod("api-tag-extensions"),
        mod("net.fabricmc.fabric-api:fabric-command-api-v1:latest.integration"),
        mod("net.auoeke:huntingham-hills:latest.integration"),
        mod("net.auoeke:reflect:latest.integration"),
        bloated("cloth-config"),
        api("net.bytebuddy:byte-buddy-agent:latest.release")
    )

    bloated("mod-menu:2.0.14")
}

configurations.all {
    resolutionStrategy.eachDependency {
        if (requested.name == "fabric-resource-loader-v0") {
            useVersion("0.4.8+a00e834b18")
        }
    }
}

compileKotlin {
    kotlinOptions.jvmTarget = 16
}

task modrinth(type: TaskModrinthUpload) {
    if (token = System.properties.modrinth) {
        dependsOn(publish.finalizedBy(it))
    }

    projectId = "Qx0jUYY8"
    versionNumber = version
    uploadFile = remapJar

    addGameVersion("1.17.1")
    addLoader("fabric")

    doFirst {
        logger.lifecycle(/Enter the changelog ending with "EOF"./)
        changelog = new Scanner(System.in).useDelimiter(/EOF\n/).next()
    }
}
